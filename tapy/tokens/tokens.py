

class TokensFactory(object):
    """
    Wrapper class for the autogenerated openapi client.
    """

    def __init__(self, config):
        # create a TokensApi instance...
        # tokens_client.TokensApi(config)
        pass

    def create_token(self, account=None, tenant_id=None, token_ttl=None, generate_refresh=None, refresh_ttl=None, one_time_secret=None):
        # step 1) convert inputs to NewTokenRequest object; i.e., token_request = NewTokenRequest(**inputs)
        # step 2) call the actual API using a method on the TokensApi instance on this object; i.e., TokensApi.create_token(token_request)
        # step 3) do exception handling, create our custom Tapis Errors, etc...
        # step 4) throw away the response wrapper, instantiate and return a modesl.NewTokenResponse
        pass


